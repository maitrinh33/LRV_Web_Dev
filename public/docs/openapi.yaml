openapi: 3.0.3
info:
  title: 'My TuBao Makeup Laravel API Documentation'
  description: 'This is the documentation for the My Tubao Makeup Laravel API.'
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/appointments:
    get:
      summary: ''
      operationId: getApiAppointments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiAppointments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: suscipit
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: upton.bettye@example.com
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: ratione
                  nullable: false
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-01-07T08:44:14'
                  nullable: false
                time:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                message:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
              required:
                - name
                - email
                - phone
                - date
                - time
      security: []
  '/api/appointments/{id}':
    get:
      summary: ''
      operationId: getApiAppointmentsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAppointmentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>today</code>.'
                  example: '2052-11-02'
                  nullable: false
                time:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '08:44'
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteApiAppointmentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment.'
        example: dignissimos
        required: true
        schema:
          type: string
  /api/admin/bookings:
    get:
      summary: ''
      operationId: getApiAdminBookings
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/admin/bookings/{id}':
    get:
      summary: 'Show the specified booking.'
      operationId: showTheSpecifiedBooking
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the booking.'
        example: illo
        required: true
        schema:
          type: string
  '/api/admin/bookings/{id}/approve':
    patch:
      summary: 'Approve the specified booking.'
      operationId: approveTheSpecifiedBooking
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the booking.'
        example: est
        required: true
        schema:
          type: string
  '/api/admin/bookings/{id}/reject':
    patch:
      summary: 'Reject the specified booking.'
      operationId: rejectTheSpecifiedBooking
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the booking.'
        example: sit
        required: true
        schema:
          type: string
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: kling.libby@example.net
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: quo
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
